>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


------------------------------------------------------------
=========================== TEST============================
------------------------------------------------------------

# test_1 matrix int
>>> matrix_divided([[2, 2, 2], [2, 2, 2]], 2)
[[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]

# test_2 matrix float div int
>>> matrix_divided([[2, 2, 2], [1.0, 2.0, 4]], 2)
[[1.0, 1.0, 1.0], [0.5, 1.0, 2.0]]

# test_3 matrix int div float
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# test_4 matrix int div None
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# test_5 matrix size error
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# test_6 matrix div string
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "14")
Traceback (most recent call last):
TypeError: div must be a number

# test_7 matrix div by 0 
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# test_8 string div int
>>> matrix_divided([['h', 'e', 'l'], ['l', 5, 6]], 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test_9 matrix int div by float result 0
>>> matrix_divided([[3, 5, 0],[0, 0, 0]], float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


# test_10 None
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

