The ``base_geometry`` module
======================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

------------------------------------------------------------
=========================== TEST============================
------------------------------------------------------------

# test_0 
>>> bg = BaseGeometry()


>>> bg.integer_validator("my_int", 12)


# test_1
>>> bg.integer_validator("name", "Jose")
Traceback (most recent call last):
	 ...
TypeError: name must be an integer


>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
	...
ValueError: age must be greater than 0


>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
	...
ValueError: distance must be greater than 0


# test_2
>>> bg.integer_validator("name", "12.12")
Traceback (most recent call last):
	 ...
TypeError: name must be an integer


# test_3
>>> bg.integer_validator("name", '12')
Traceback (most recent call last):
	 ...
TypeError: name must be an integer


# test_4
>>> bg.integer_validator("name", ['1', '2'])
Traceback (most recent call last):
	 ...
TypeError: name must be an integer


# test_5
>>> bg.integer_validator("name", ('1', '2'))
Traceback (most recent call last):
	 ...
TypeError: name must be an integer


# test_6
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
	 ...
TypeError: name must be an integer

# test_7
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
	 ...
TypeError: name must be an integer
